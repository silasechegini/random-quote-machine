{"version":3,"sources":["App.js","index.js"],"names":["App","props","state","quote","author","color","Math","floor","random","toString","handleClick","bind","myColor","this","$","document","ready","parents","css","setState","fetch","then","response","json","data","i","length","text","console","log","class","style","id","target","rel","href","onClick","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"6QAwFeA,E,kDA/Eb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAQ,CACXC,MAAO,0JACPC,OAAQ,6BACRC,MAAO,IAAMC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,KAE3D,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPH,E,qDAUlB,WACE,IAAIC,EAAUC,KAAKX,MAAMG,MACzBS,IAAEC,UAAUC,OAAM,WAChBF,IAAE,cAAcG,UAAUC,IAAI,kBAAmBN,GACjDE,IAAE,cAAcI,IAAI,kBAAmBN,GACvCE,IAAE,gBAAgBI,IAAI,kBAAmBN,GACzCE,IAAE,iBAAiBI,IAAI,kBAAmBN,GAC1CE,IAAE,SAASI,IAAI,QAASN,GACxBE,IAAE,WAAWI,IAAI,QAASN,Q,yBAI9B,WAAc,IAAD,OACXC,KAAKM,SAAS,CACZd,MAAO,IAAMC,KAAKC,MAAoB,SAAdD,KAAKE,UAAmBC,SAAS,MAE3D,IAAIG,EAAUC,KAAKX,MAAMG,MACzBS,IAAEC,UAAUC,OAAM,WAChBF,IAAE,cAAcG,UAAUC,IAAI,kBAAmBN,GACjDE,IAAE,cAAcI,IAAI,kBAAmBN,GACvCE,IAAE,gBAAgBI,IAAI,kBAAmBN,GACzCE,IAAE,iBAAiBI,IAAI,kBAAmBN,GAC1CE,IAAE,SAASI,IAAI,QAASN,GACxBE,IAAE,WAAWI,IAAI,QAASN,MAE5BQ,MAAM,+BACHC,MAAK,SAAAC,GACN,OAAOA,EAASC,UACfF,MAAM,SAAAG,GACP,IAAIC,EAAInB,KAAKC,MAAMD,KAAKE,SAAWgB,EAAKE,QACpCvB,EAAQqB,EAAKC,GAAGE,KAChBvB,EAAS,UACGA,EAAhBoB,EAAKC,GAAGrB,OAAiBoB,EAAKC,GAAGrB,OAAkB,UACnDwB,QAAQC,IAAI1B,EAAOC,GACnB,EAAKe,SAAS,CACZhB,MAAOA,EACPC,OAAQA,S,oBAKd,WACE,OACE,qBAAK0B,MAAM,0BAA0BC,MAAO,CAAC,aAAe,UAA5D,SACE,sBAAKC,GAAG,YAAYF,MAAM,4BAA4BC,MAAO,CAAC,UAAY,MAAO,MAAQ,SAAzF,UACA,sBAAKA,MAAO,CAAC,QAAU,QAAvB,UACE,qBAAIC,GAAG,OAAP,UAAc,mBAAGF,MAAM,sBAAvB,IAAiDjB,KAAKX,MAAMC,SAC5D,oBAAG4B,MAAO,CAAC,YAAc,OAAQC,GAAG,SAApC,cAA+CnB,KAAKX,MAAME,aAE5D,sBAAK0B,MAAM,WAAX,UACE,qBAAKA,MAAM,WAAX,SACE,mBAAGG,OAAO,SAASC,IAAI,aAAaC,KAAK,mCAAmCL,MAAM,gBAAgBE,GAAG,kBAEvG,qBAAKF,MAAM,WAAX,SACE,mBAAGK,KAAK,IAAIL,MAAM,eAAeE,GAAG,mBAEtC,qBAAKF,MAAM,aACX,qBAAKA,MAAM,WAAX,SACE,wBAAQA,MAAM,iCAAiCE,GAAG,YAChDI,QAASvB,KAAKH,YADhB,qC,GArEM2B,IAAMC,WCHxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF1B,SAAS2B,eAAe,U","file":"static/js/main.444df889.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\n/* eslint-disable jsx-a11y/anchor-has-content */\nimport './App.css';\nimport React from 'react';\nimport $ from 'jquery';\nimport './index.css';\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      quote: 'The heights by great men reached and kept were not attained by sudden flight, but they, while their companions slept, were toiling upward in the night.',\n      author: 'Henry Wadsworth Longfellow',\n      color: \"#\" + Math.floor(Math.random()*16777215).toString(16)\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n \n  componentDidMount() {\n    let myColor = this.state.color\n    $(document).ready(function(){\n      $(\"#quote-box\").parents().css(\"backgroundColor\", myColor)\n      $(\"#new-quote\").css(\"backgroundColor\", myColor)\n      $(\"#tweet-quote\").css(\"backgroundColor\", myColor)\n      $(\"#tumblr-quote\").css(\"backgroundColor\", myColor)\n      $(\"#text\").css(\"color\", myColor)\n      $(\"#author\").css(\"color\", myColor)\n    })\n  }\n  \n  handleClick(){\n    this.setState({\n      color: \"#\" + Math.floor(Math.random()*16777215).toString(16)\n    })\n    let myColor = this.state.color\n    $(document).ready(()=>{\n      $(\"#quote-box\").parents().css(\"backgroundColor\", myColor)\n      $(\"#new-quote\").css(\"backgroundColor\", myColor)\n      $(\"#tweet-quote\").css(\"backgroundColor\", myColor)\n      $(\"#tumblr-quote\").css(\"backgroundColor\", myColor)\n      $(\"#text\").css(\"color\", myColor)\n      $(\"#author\").css(\"color\", myColor)\n    })\n    fetch(\"https://type.fit/api/quotes\")\n      .then(response => {\n      return response.json();\n    }).then( data =>{\n      let i = Math.floor(Math.random() * data.length);\n      let quote = data[i].text;\n      let author = \"Unknown\";\n      data[i].author? author = data[i].author : author = \"Unknown\";\n      console.log(quote, author)\n      this.setState({\n        quote: quote,\n        author: author\n      })\n    });\n  };\n  \n  render(){\n    return(\n      <div class=\"row align-items-center \" style={{\"alignContent\":\"center\"}}>\n        <div id=\"quote-box\" class=\"card p-3 bg-white mx-auto\" style={{\"marginTop\":\"15%\", \"width\":\"600px\"}}>\n        <div style={{\"padding\":\"30px\"}}>\n          <h2 id=\"text\"><i class=\"fas fa-quote-left\"></i> {this.state.quote}</h2>\n          <p style={{\"paddingLeft\":\"50%\"}} id=\"author\">-{this.state.author}</p>\n        </div>\n        <div class=\"row mx-2\">\n          <div class=\"col-sm-1\">\n            <a target=\"_blank\" rel='noreferrer' href=\"https://twitter.com/intent/tweet\" class=\"fa fa-twitter\" id=\"tweet-quote\"></a>\n          </div>\n          <div class=\"col-sm-1\">\n            <a href=\"#\" class=\"fa fa-tumblr\" id=\"tumblr-quote\"></a>\n          </div>\n          <div class=\"col-sm-7\"></div>\n          <div class=\"col-sm-3\">\n            <button class=\"btn btn-info btn-outline-light\" id=\"new-quote\"\n              onClick={this.handleClick}>New quote</button>\n          </div>\n        </div>\n      </div>\n      </div>\n      \n    )\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}